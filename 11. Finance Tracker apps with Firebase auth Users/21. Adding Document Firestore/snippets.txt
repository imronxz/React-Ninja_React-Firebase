_useFirestore.js

// TODO: Dispatching Action manually
const firestoreReducer = (state, action) => {
  switch (action.type) {
    case 'IS_PENDING':
      return {
        document: null,
        isPending: true,
        error: null,
        success: false,
      };
    case 'ADDED_DOCUMENT':
      return {
        /* no need spread state, bcs we update manually initialState */
        document: action.payload,
        isPending: false,
        error: null,
        success: true,
      };
    case 'ERROR':
      return {
        /* no need spread state, bcs we update manually initialState */
        document: null,
        isPending: false,
        error: action.payload,
        success: false,
      };
    default:
      return state;
  }
};
  //TODO:! only dispatch is not cancelled
  const dispatchIfNotCancelled = (action) => {
    if (!isCancelled) {
      dispatch(action);
    }
  };

  // * Add document get from Object TransaksiForm.js
  const addDocument = async (doc) => {
    dispatch({ type: 'IS_PENDING' });
    try {
      const addedDocumnet = await ref.add(doc);
      dispatchIfNotCancelled({
        type: 'ADDED_DOCUMENT',
        payload: addedDocumnet, //FIXME: getback to addedDocumnet
      });
    } catch (error) {
      dispatchIfNotCancelled({
        type: 'ERROR',
        payload: error.message,
      });
    }
  };